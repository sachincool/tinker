# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo sites to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job for main blog site (harshit.cloud)
  build-main-blog:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          GOOGLE_ANALYTICS: ${{ vars.GOOGLE_ANALYTICS }}
        run: |
          envsubst < hugo.yaml > hugo.yaml.tmp
          mv hugo.yaml.tmp hugo.yaml
          hugo \
            --minify \
            --baseURL "https://harshit.cloud/"
      # Create CNAME file for custom domain
      - name: Create CNAME for harshit.cloud
        run: echo "harshit.cloud" > ./public/CNAME
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: main-blog
          path: ./public

  # Build job for blog subdomain (blog.harshit.cloud)
  build-blog-subdomain:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          GOOGLE_ANALYTICS: ${{ vars.GOOGLE_ANALYTICS }}
        run: |
          envsubst < hugo.yaml > hugo.yaml.tmp
          mv hugo.yaml.tmp hugo.yaml
          hugo \
            --minify \
            --baseURL "https://blog.harshit.cloud/"
      # Create CNAME file for custom domain
      - name: Create CNAME for blog.harshit.cloud
        run: echo "blog.harshit.cloud" > ./public/CNAME
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: blog-subdomain
          path: ./public

  # Build job for tinker.cloud domain
  build-tinker:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          GOOGLE_ANALYTICS: ${{ vars.GOOGLE_ANALYTICS }}
        run: |
          envsubst < hugo.yaml > hugo.yaml.tmp
          mv hugo.yaml.tmp hugo.yaml
          hugo \
            --minify \
            --baseURL "https://tinker.cloud/"
      # Create CNAME file for custom domain
      - name: Create CNAME for tinker.cloud
        run: echo "tinker.cloud" > ./public/CNAME
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: tinker-site
          path: ./public

  # Deployment job for main blog site
  deploy-main-blog:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-main-blog
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: main-blog

  # Deployment job for blog subdomain
  deploy-blog-subdomain:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-blog-subdomain
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: blog-subdomain

  # Deployment job for tinker.cloud
  deploy-tinker:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-tinker
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: tinker-site
